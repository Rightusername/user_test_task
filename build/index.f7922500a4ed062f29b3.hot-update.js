webpackHotUpdate("index",{

/***/ "./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./node_modules/vue-svg-inline-loader/dist/index.min.js?!./src/app/views/Main.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./node_modules/vue-svg-inline-loader/dist/index.min.js??ref--1-1!./src/app/views/Main.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = __webpack_require__(/*! babel-runtime/helpers/extends */ \"./node_modules/babel-runtime/helpers/extends.js\");\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _vuex = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n\nvar _clonedeep = __webpack_require__(/*! lodash-es/clonedeep */ \"./node_modules/lodash-es/clonedeep.js\");\n\nvar _clonedeep2 = _interopRequireDefault(_clonedeep);\n\nvar _UserCreateModal = __webpack_require__(/*! app/components/modals/UserCreateModal.vue */ \"./src/app/components/modals/UserCreateModal.vue\");\n\nvar _UserCreateModal2 = _interopRequireDefault(_UserCreateModal);\n\nvar _UserEditModal = __webpack_require__(/*! app/components/modals/UserEditModal.vue */ \"./src/app/components/modals/UserEditModal.vue\");\n\nvar _UserEditModal2 = _interopRequireDefault(_UserEditModal);\n\nvar _ConfirmModal = __webpack_require__(/*! app/components/modals/ConfirmModal.vue */ \"./src/app/components/modals/ConfirmModal.vue\");\n\nvar _ConfirmModal2 = _interopRequireDefault(_ConfirmModal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  name: 'Main',\n  components: {},\n  data: function data() {\n    return {\n      usersLoaded: false,\n      searchQuery: '',\n\n      isOpenSearch: false\n    };\n  },\n\n  computed: (0, _extends3.default)({}, (0, _vuex.mapGetters)(['users']), {\n    filteredUsers: function filteredUsers() {\n      if (this.searchQuery.length == 0) {\n        return this.users;\n      } else {\n        var reg = new RegExp(this.searchQuery, 'gi');\n        return this.users.filter(function (user) {\n          return user.name.match(reg);\n        });\n      }\n    }\n  }),\n\n  created: function created() {\n    var _this = this;\n\n    this.$store.dispatch('FETCH_USERS').then(function () {\n      _this.usersLoaded = true;\n    });\n  },\n  beforeDestroy: function beforeDestroy() {},\n  mounted: function mounted() {},\n\n\n  methods: {\n    createUser: function createUser() {\n      this.$modal.show(_UserCreateModal2.default, {}, {\n        transition: 'fade'\n      });\n    },\n    removeUser: function removeUser(user) {\n      var _this2 = this;\n\n      this.$modal.show(_ConfirmModal2.default, {\n        data: {\n          title: 'Remove user',\n          text: 'Are you sure you want to remove this user?',\n          btns: {\n            confirm: {\n              title: 'Remove',\n              callback: function callback() {\n                _this2.$store.dispatch('USER_REMOVE', user);\n              }\n            }\n          }\n        }\n      }, {\n        transition: 'fade'\n      });\n    },\n    editUser: function editUser(user) {\n      this.$modal.show(_UserEditModal2.default, {\n        user: (0, _clonedeep2.default)(user, { deep: true })\n      }, {\n        transition: 'fade'\n      });\n    },\n    openSearch: function openSearch() {\n      console.log('openSearch');\n      this.isOpenSearch = true;\n    }\n  }\n}; //\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/index.js?!./node_modules/vue-svg-inline-loader/dist/index.min.js?!./src/app/views/Main.vue?vue&type=script&lang=js&\n");

/***/ })

})